name: Laravel

on: [push, pull_request]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest
    
    env:
      BROADCAST_DRIVER: log
      CACHE_DRIVER: redis
      QUEUE_CONNECTION: redis
      SESSION_DRIVER: redis
      DB_CONNECTION: pgsql
      DB_HOST: localhost
      DB_PASSWORD: postgres
      DB_USERNAME: postgres
      DB_DATABASE: postgres
    
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432/tcp
          
      redis:
        image: redis
        
        ports:
          - 6379/tcp
          
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          
    strategy:
      fail-fast: false
      
      matrix:
        php-versions: ['8.1', '8.2']

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, dom, fileinfo, pgsql
        
    - name: Get Composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        # Use composer.json for key, if composer.lock is not committed.
        # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
        
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Prepare the application
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
        php artisan key:generate
      
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
      
    - name: Clear Config
      run: php artisan config:clear

    - name: Run Migration
      run: php artisan migrate -v
      env:
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

    - name: Test with PHPUnit
      run: vendor/bin/phpunit --coverage-text
      env:
        DB_PORT: ${{ job.services.postgres.ports[5432] }}
        REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
